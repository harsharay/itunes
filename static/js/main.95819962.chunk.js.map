{"version":3,"sources":["Components/Individual/Individual.jsx","Components/NotFoundPage/NotFoundPage.jsx","Components/Main/Main.jsx","App.js","serviceWorker.js","Sagas/Saga.js","Reducers/RootReducer.js","index.js"],"names":["Individual","props","useState","data","setData","useEffect","console","log","id","match","params","trackId","fetch","then","json","results","className","src","artworkUrl100","alt","collectionName","trackName","artistName","href","trackViewUrl","trackPrice","collectionPrice","collectionViewUrl","NotFoundPage","to","connect","state","dispatch","handleClick","newVal","type","payload","query","loading","setState","placeholder","onChange","e","target","value","prevVal","onClick","includes","newQuery","split","join","map","item","index","key","App","exact","path","component","Main","Boolean","window","location","hostname","makingApiCall","makeApiCall","select","input_query","call","response","resultCount","put","message","takeLatest","initState","RootReducer","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.95819962.chunk.js","sourcesContent":["import React,{ useState,useEffect } from 'react'\r\n\r\nimport \"./Individual.styles.css\"\r\n\r\nfunction Individual(props) {\r\n\r\n\r\n    const [data,setData] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        let id = props.match.params.trackId\r\n        fetch(`https://itunes.apple.com/search?term=${id}&entity=song`)\r\n        .then(data => data.json())\r\n        .then(json => setData(json.results[0]))\r\n        // .then(json => console.log(json.results[0].artistName))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"sep-page\">\r\n            <img src={data.artworkUrl100} alt={data.collectionName} />\r\n            <div className=\"content\">\r\n                <h1>{data.trackName}</h1>\r\n                <h2>{data.artistName}</h2>\r\n                <h3>{data.collectionName}</h3>\r\n                {/* <audio controls=\"controls\">\r\n                    <source src={data.previewUrl} type=\"audio/m4a\" />\r\n                </audio> */}\r\n                <br/>\r\n                <a href={data.trackViewUrl}>View the track in Itunes</a>\r\n                <h4>Track Price:{data.trackPrice}</h4>\r\n                <h4>Collection Price:{data.collectionPrice}</h4>\r\n                <a href={data.collectionViewUrl}>View this collection in Itunes</a>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Individual\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h1>404 Not found, return <Link to=\"/home\">HOME</Link></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React,{ useState } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Input } from 'antd';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"./Main.styles.css\"\r\n\r\nconst Main = (props) => {\r\n\r\n    const [state,setState] = useState({\r\n        query:\"\",\r\n        loading: false\r\n    })\r\n\r\n\r\n    const handleChange = e => {\r\n        let newVal = e.target.value\r\n        setState(prevVal => {\r\n            return {\r\n                ...prevVal,\r\n                query : newVal,\r\n                loading: false\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <h2>Search for an artist</h2>\r\n            <Input placeholder=\"type here...\" onChange={handleChange} value={state.query}/>\r\n            <button onClick={() => {\r\n                if(state.query.includes(\" \")){\r\n                    let temporary = state.query.split(\" \")\r\n                    let newQuery = temporary.join(\"+\")\r\n                    props.handleClick(newQuery)\r\n                    setState({\r\n                        query:\"\"\r\n                    })\r\n                }else {\r\n                    props.handleClick(state.query)\r\n                }\r\n            }}>Search</button>\r\n            \r\n            <div className=\"results-list\">\r\n                {props.data[0]!==\"Error\" ?\r\n                    props.data.map((item,index) => \r\n                        <div className=\"individual\" key={index}>\r\n                        <Link to={'/id/'+ item.trackId} target=\"_blank\">\r\n                            <h1>{item.trackName}</h1>\r\n                        </Link>\r\n                            <h3>{item.collectionName}</h3>\r\n                            <img src={item.artworkUrl100} alt={item.collectionName} />\r\n                            <a href={item.trackViewUrl} target=\"_blank\">View the track in Itunes</a>\r\n                            <h4>Track Price:{item.trackPrice}</h4>\r\n                            <h4>Collection Price:{item.collectionPrice}</h4>\r\n                            <a href={item.collectionViewUrl} target=\"_blank\">View this collection in Itunes</a>\r\n                        </div>\r\n                )\r\n                :\r\n                <h2 className=\"error\">No response, try another valid search</h2>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data : state.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleClick : newVal => dispatch({type:\"SEARCH\",payload:newVal})\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react';\nimport Individual from \"./Components/Individual/Individual\";\nimport NotFoundPage from \"./Components/NotFoundPage/NotFoundPage\"\n\nimport { BrowserRouter,Route,Switch } from \"react-router-dom\"\n\nimport Main from \"./Components/Main/Main\"\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <h1 className=\"title\">Itunes Search</h1>\n        <Switch>\n          <Route exact path=\"/\" component={Main}/>\n          <Route path=\"/id/:trackId\" component={Individual}/>\n          <Route path=\"*\" component={NotFoundPage}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { call,put,takeLatest,select } from \"redux-saga/effects\";\r\n\r\nconst query = state => state.query\r\n\r\n\r\n//WORKER SAGA\r\nexport function* makingApiCall() {\r\n    try {\r\n        const input_query = yield select(query)\r\n        const response = yield call(fetch,`https://itunes.apple.com/search?term=${input_query}`)\r\n        const data = yield response.json()\r\n        if(data.resultCount!==0){\r\n            yield put({type:\"API_CALL\", payload: data.results}) \r\n        } else {\r\n            yield put({type:\"API_ERROR\"})\r\n        }\r\n        \r\n    } catch(e){\r\n        console.log(e.message,\"error\")\r\n        yield put({type:\"API_ERROR\"})\r\n    }\r\n}\r\n\r\n\r\n\r\n//WATCHER SAGA\r\nexport function* makeApiCall() {\r\n    yield takeLatest('SEARCH', makingApiCall)\r\n}","const initState = {\r\n    data : [],\r\n    query : \"\"\r\n}\r\n\r\nconst RootReducer = (state=initState,action) => {\r\n    if(action.type===\"SEARCH\"){\r\n        return {\r\n            ...state,\r\n            query: action.payload\r\n        }\r\n        \r\n    } else if(action.type===\"API_CALL\"){\r\n        return {\r\n            ...state,\r\n            data : action.payload\r\n        }\r\n    } else if(action.type===\"API_ERROR\"){\r\n        return {\r\n            ...state,\r\n            data : [\"Error\"]\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { makeApiCall } from \"./Sagas/Saga\"\n\nimport RootReducer from \"./Reducers/RootReducer\";\n\nimport { createStore, applyMiddleware } from \"redux\"\n\nimport { Provider } from \"react-redux\"\n\nimport createSagaMiddleware from \"redux-saga\"\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(RootReducer, applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(makeApiCall)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}